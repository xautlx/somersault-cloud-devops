---
- name: set_fact
  set_fact:
    install_cache_dir: /data/cache/docker_images

- name: create data dir
  file:
    path: "{{item}}"
    mode: "0755"
    state: directory
  loop:
    - "{{install_cache_dir}}/basic"
    - "{{install_cache_dir}}/apps"

- name: list exist images
  shell:
    cmd: "docker images | grep -v REPOSITORY"
  register: exist_image_list
  ignore_errors: true

- name: print exist_image_list
  debug:
    msg: "{{ exist_image_list}}"

- name: set_fact exist_images
  set_fact:
    exist_images: "{{(exist_image_list.stdout_lines | join(',')).split() | join('-')}}"

- name: print exist_images
  debug:
    msg: "{{ exist_images}}"

- include_tasks: import_host.yml
  vars:
    image_file: "{{item}}"
  loop: "{{image_files}}"
  when:
    - "'{{item.repository}}-{{item.tag}}' not in exist_images"

- name: "docker login {{docker_repo_addr}}"
  delegate_to: localhost
  shell: "docker login -u {{docker_repo_user}} -p {{docker_repo_passwd}} {{docker_repo_addr}}"
  when:
    - docker_repo_passwd is defined
  register: docker_login_result

- name: "show docker login result"
  delegate_to: localhost
  debug:
    msg: "{{docker_login_result.stdout}}"
  when: docker_repo_passwd is defined

- include_tasks: import_repo.yml
  vars:
    image_file: "{{item}}"
  loop: "{{image_files}}"
  when:
    - docker_repo_addr | default('') != ''
    - item.type == 'apps'
    - inventory_hostname == groups['docker'][0]
    - "'{{item.repository}}-{{item.tag}}' not in exist_images"