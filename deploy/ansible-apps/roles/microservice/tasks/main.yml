---
- name: set_fact docker_image_repo
  set_fact:
    docker_image_repo: "{{docker_repo_addr}}/"
  when: docker_repo_addr | default('') != ''

- name: Get mysql master addr from hosts config
  set_fact:
    mysql_replication_master_addr: "{{hostvars[item]['ansible_ssh_host']}}:{{hostvars[item]['mysql_port']}}"
    mysql_passwd: "{{hostvars[item]['mysql_passwd']}}"
  when: hostvars[item]['mysql_master_vip'] is defined and hostvars[item]['mysql_master_vip'] == 'auto'
  with_items: "{{groups['mysql']}}"

- name: Get mysql master addr from hosts config
  set_fact:
    mysql_replication_master_addr: "{{hostvars[item]['mysql_master_vip']}}:{{hostvars[item]['mysql_port']}}"
    mysql_passwd: "{{hostvars[item]['mysql_passwd']}}"
  when: hostvars[item]['mysql_master_vip'] is defined and hostvars[item]['mysql_master_vip'] != 'auto'
  with_items: "{{groups['mysql']}}"

- name: Get mysql slave addr from hosts config
  set_fact:
    mysql_replication_slave_addr: "{{hostvars[item]['ansible_ssh_host']}}:{{hostvars[item]['mysql_port']}}"
  when: hostvars[item]['mysql_slave_vip'] is defined and hostvars[item]['mysql_slave_vip'] == 'auto'
  with_items: "{{groups['mysql']}}"

- name: Get mysql slave addr from hosts config
  set_fact:
    mysql_replication_slave_addr: "{{hostvars[item]['mysql_slave_vip']}}:{{hostvars[item]['mysql_port']}}"
  when: hostvars[item]['mysql_slave_vip'] is defined and hostvars[item]['mysql_slave_vip'] != 'auto'
  with_items: "{{groups['mysql']}}"

- name: Get redis master from hosts config
  set_fact:
    redis_replication_master_host: "{{hostvars[item]['ansible_ssh_host']}}"
    redis_replication_master_port: "{{hostvars[item]['redis_port']}}"
    redis_requirepass: "{{hostvars[item]['redis_requirepass']}}"
    sentinel_master_name: "{{hostvars[item]['sentinel_master_name']}}"
  when: hostvars[item]['sentinel_master_name'] is defined
  with_items: "{{groups['redis']}}"

- name: Get vars from hosts config
  set_fact:
    xxl_job_access_token: "{{hostvars[groups['xxl_job'][0]]['xxl_job_access_token']}}"

- name: Get prometheus_file_sd_configs_dir from hosts config
  set_fact:
    prometheus_file_sd_configs_dir: "{{hostvars[groups['prometheus'][0]]['prometheus_file_sd_configs_dir']}}"
  when: groups['prometheus'] | length > 0

- name: Include nacos-config.yml task
  include_tasks: nacos-config.yml
  when: hostvars[groups['apps_microservice'][0]]['ansible_ssh_host'] == hostvars[inventory_hostname]['ansible_ssh_host']

- name: clear localhost prometheus_file_sd_configs_temp data dir
  file:
    path: "{{dir_to_clear}}"
    state: absent
  loop:
    - "{{prometheus_file_sd_configs_temp}}/microservice"
  loop_control:
    loop_var: dir_to_clear
  delegate_to: localhost
  when: groups['prometheus'] | length > 0
  failed_when: false

- name: create localhost prometheus_file_sd_configs_temp data dir
  file:
    path: "{{dir_to_create}}"
    mode: "0755"
    state: directory
  loop:
    - "{{prometheus_file_sd_configs_temp}}/microservice"
  loop_control:
    loop_var: dir_to_create
  delegate_to: localhost
  become: false
  when: groups['prometheus'] | length > 0

- name: "docker login {{docker_repo_addr}}"
  shell: "docker login -u {{docker_repo_user}} -p {{docker_repo_passwd}} {{docker_repo_addr}}"
  when: docker_repo_passwd is defined
  register: docker_login_result

- name: "show docker login result"
  debug:
    msg: "{{docker_login_result.stdout}}"
  when: docker_repo_passwd is defined

- name: process updating_services
  set_fact:
    updating_services_split:  "{{ updating_services.split(' ') }}"
  when: updating_services is defined and updating_services | trim | length > 0

- name: show updating_services_split
  debug:
    msg:  "{{ updating_services_split }}"
  when: updating_services_split is defined

- name: Include service.yml task
  include_tasks: service.yml
  vars:
    service_prom_configs: [ ]
    service_config: "{{service}}"
  when:
    - updating_services_split is not defined or service.name in updating_services_split
    - service.ignored == false
  loop: "{{microservices}}"
  loop_control:
    loop_var: service