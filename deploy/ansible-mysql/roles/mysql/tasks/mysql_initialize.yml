---

- name: Create mysql required Directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ mysql_user }}"
    group: "{{ mysql_group }}"
    mode: 0755
  with_items:
    - "{{ mysql_data_path }}"
    - "{{ mysql_run_path }}"
    - "{{ mysql_log_path }}"
    - "{{ mysql_binlog_path }}"
    - "{{ mysql_relaylog_path }}"
    - "{{ mysql_tmpfile_path }}"

- name: copy my.cnf.j2
  template:
    src: "my.cnf.j2"
    dest: /etc/my.cnf
    owner: "{{ mysql_user }}"
    group: "{{ mysql_group }}"
    mode: 0644

- name: mysql initialize
  shell:
    cmd: "/usr/local/mysql/bin/mysqld --defaults-file=/etc/my.cnf --basedir=/usr/local/mysql/ --datadir={{mysql_dbfile_path}} --log-bin={{mysql_binlog_path}}/mysql-bin --user={{mysql_user}} --initialize | cat"

- name: pkill mysqld after initialize
  shell:
    cmd: "pkill mysqld"
  failed_when: false

- name: Ensure mysqld is started and enabled on boot.
  service:
    name: "mysqld"
    state: restarted
    enabled: "true"

- name: get default root password
  shell:
    cmd: cat /data/mysql/log/mysqld-error.log  | grep password | cut -d " " -f 13
  register: default_root_passwd

#- name: show default root password
#  debug:
#    msg: '{{default_root_passwd}}'

- name: root_password reset
  shell:
    cmd: mysql -uroot -p"{{default_root_passwd.stdout}}" --connect-expired-password  -e  "alter user 'root'@'localhost' identified with mysql_native_password by '{{ mysql_root_password }}';"

- name: create host root user as required.
  mysql_user:
    name: "root"
    host: "{{mysql_root_host}}"
    password: "{{ mysql_root_password }}"
    priv: "*.*:ALL,GRANT"
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: "{{mysql_run_path}}/mysql.sock"
    state: present
  when:
    - mysql_root_host is defined
    - mysql_root_host != 'localhost'

- name: Ensure mysqld_exporter user exists on master.
  mysql_user:
    name: "{{mysql_prom_exporter_name}}"
    host: "{{mysql_user_host}}"
    password: "{{ mysql_prom_exporter_passwd }}"
    priv: "*.*:USAGE,PROCESS,REPLICATION CLIENT"
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: "{{mysql_run_path}}/mysql.sock"
    state: present
  loop:
    - '{{mysql_user_host}}'
    - "{{hostvars[groups['docker'][0]]['docker_address_pools'].split('0.0')[0]}}%"

- name: Ensure mysql_replication user exists on master.
  mysql_user:
    name: "{{mysql_replication_name}}"
    host: "{{item}}"
    password: "{{ mysql_replication_passwd }}"
    priv: "*.*:PROCESS,REPLICATION CLIENT,REPLICATION SLAVE,SELECT"
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: "{{mysql_run_path}}/mysql.sock"
    state: present
  loop:
    - '{{mysql_user_host}}'
    - 'localhost'
  when:
    - groups['mysql'] | length > 0

- name: flush privileges
  shell:
    cmd: mysql -uroot -p'{{ mysql_root_password }}' --connect-expired-password  -e "flush privileges;"

