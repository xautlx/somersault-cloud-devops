---
- name: "[cert sync] Create temporary file for existing certs"
  ansible.builtin.tempfile:
    state: file
    suffix: temp
  register: tempfile_existing

- name: "[cert sync] Create temporary file for expected certs"
  ansible.builtin.tempfile:
    state: file
    suffix: temp
  register: tempfile_expected

- name: "[cert sync] Write expected client list to temp file for comparison with existing certs"
  ansible.builtin.template:
    src: cert_sync_expected_clients.j2
    dest: "{{ tempfile_expected.path }}"
    mode: 0644
  when: openvpn_sync_certs

- name: "[cert sync] Get existing certs"
  shell:
    cmd: |
      set -o pipefail
      ls -1 *.csr | { grep -v server.csr || true; } | sort | cut -f1 -d'.' > {{ tempfile_existing.path }}
    chdir: "{{ openvpn_key_dir }}"
    executable: /bin/bash
  when: openvpn_sync_certs

- name: "[cert sync] Find certs that exist but aren't supposed to (on disk, but not in client list)"
  command:
    cmd: comm -23 {{ tempfile_existing.path }} {{ tempfile_expected.path }}
  register: openvpn_cert_sync_revoke
  when: openvpn_sync_certs

- name: "[cert sync] Debug: Certs to revoke (skipped if none)"
  ansible.builtin.debug:
    msg: "Will revoke additional certs: {{ openvpn_cert_sync_revoke.stdout_lines | join(', ') }}"
  when: openvpn_cert_sync_revoke.stdout_lines | length > 0

- name: "[cert sync] Cleanup temp files"
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ tempfile_existing.path }}"
    - "{{ tempfile_expected.path }}"
